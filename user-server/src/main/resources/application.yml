spring:
  docker:
    compose:
      enabled: false
  application:
    name: user-service

  datasource:
    url: jdbc:mysql://localhost:3309/user_db
    username: myuser
    password: secret
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql

  data:
    redis:
      host: localhost
      port: 6379

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: 8083

jwt:
  secret: ${JWT_SECRET:mySecretKeyForJWTTokenGenerationThatShouldBeAtLeast32CharactersLong}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

verification:
  code:
    expiration: ${VERIFICATION_CODE_EXPIRATION:300000} # 5 minutes in milliseconds