plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25' apply false
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25' apply false
    id 'org.springframework.boot' version '3.5.5' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

group = 'msa'
version = '0.0.1-SNAPSHOT'
description = 'kotlin-kafka-msa-sample'

allprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.kafka:spring-kafka'

        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        runtimeOnly 'com.mysql:mysql-connector-j'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    kotlin {
        compilerOptions {
            freeCompilerArgs.addAll '-Xjsr305=strict'
        }
    }

    allOpen {
        annotation 'jakarta.persistence.Entity'
        annotation 'jakarta.persistence.MappedSuperclass'
        annotation 'jakarta.persistence.Embeddable'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
